import React, { useEffect, useState } from "react";
import { NavigationContainer } from "@react-navigation/native";
import { createStackNavigator } from "@react-navigation/stack";
import AsyncStorage from "@react-native-async-storage/async-storage";
import AuthNavigator from "./AuthNavigator";
import MainNavigator from "./MainNavigator";
import { onAuthStateChanged } from "firebase/auth";
import { auth } from './firebase';
import { AuthProvider } from "./AuthContext";

const Stack = createStackNavigator();

const App = () => {

  const [isLoggedIn, setIsLoggedIn] = useState(false);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const checkLoginStatus = async () => {

      setIsLoggedIn(await AsyncStorage.getItem('isLoggedIn'))
      onAuthStateChanged(auth, async (user) => {
        if (user) {
          const uid = user.uid;
          console.log("uid", uid)
          await AsyncStorage.setItem('isLoggedIn', "true");
          setIsLoggedIn(true);
        } else {
          console.log("user is logged out");
          await AsyncStorage.setItem('isLoggedIn', "false");
          setIsLoggedIn(false);
        }
        setLoading(false);
      });
    };

    checkLoginStatus();
  }, []); // Empty dependency array to run the effect only once

  if (loading) {
    // Add a loading screen or other UI here if needed
    return null;
  }

  return (
    <AuthProvider><NavigationContainer>
  <Stack.Navigator screenOptions={{ headerShown: false }}>
    {isLoggedIn === 'true' ? ( // Check if it's the string "true"
      <Stack.Screen name="Main" component={MainNavigator} />
    ) : (
      <Stack.Screen name="Auth" component={AuthNavigator} />
    )}
  </Stack.Navigator>
</NavigationContainer>
</AuthProvider>
    

  );
};

export default App;
